@import "base";

$grid__cols: 12;

$map-grid-props: (
  '': 0,
  '-sm': map_get($breakpoints, 'sm'),
  '-md': map_get($breakpoints, 'm'),
  '-lg': map_get($breakpoints, 'l'),
  '-xl': map_get($breakpoints, 'xl')
);
$justify-content: (
  flex-start,
  flex-end,
  center,
  space-between,
  space-around,
  space-evenly,
  start,
  end,
  left,
  right,
);
$align-items: (
  stretch,
  flex-start,
  flex-end,
  center,
  baseline,
  start,
  end,
  self-start,
  self-end,
);

@mixin create-mq($breakpoint, $min-or-max) {
  @if($breakpoint == 0) {
    @content;
  } @else {
    @media screen and (#{$min-or-max}-width: $breakpoint *1px) {
      @content;
    }
  }
}

@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
  @include create-mq($breakpoint, 'min') {
    .col#{$modifier}-offset-0 {
      margin-left: 0;
    }
    @for $i from 1 through $grid-cols {
      .col#{$modifier}-#{$i} {
        flex-basis: (100 / ($grid-cols / $i) ) * 1%;
      }
      .col#{$modifier}-offset-#{$i} {
        margin-left: (100 / ($grid-cols / $i) ) * 1%;
      }
    }
  }
}

@each $modifier , $breakpoint in $map-grid-props {
  @if($modifier == '') {
    $modifier: '-xs';
  }
  @include create-mq($breakpoint - 1, 'max') {
    .hidden#{$modifier}-down {
      display: none !important;
    }
  }
  @include create-mq($breakpoint, 'min') {
    .hidden#{$modifier}-up {
      display: none !important;
    }
  }
}

.container {
  max-width: map_get($breakpoints, 'm') * 1px;
  margin: 0 auto;
  &--fluid {
    margin: 0;
    max-width: 100%;
  }
  .row {
    display: flex;
    flex-wrap: wrap;
    width: 100%;
    @each $value in $justify-content {
      &.x-#{$value} {
        justify-content: $value;
      }
    }
    @each $value in $align-items {
      &.y-#{$value} {
        align-items: $value;
      }
    }
  }
  @each $modifier , $breakpoint in $map-grid-props {
    @include create-col-classes($modifier, $grid__cols, $breakpoint);
  }
}
